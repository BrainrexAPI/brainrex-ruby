=begin
#Brainrex API Explorer

#Welcome to the Brainrex API explorer, we make analytics tools for crypto and blockchain. Our currently propiertary models offer sentiment analysis, market making, blockchain monitoring and face-id verification. This AI models can be consumed from this API. We also offer integrations to open data and propietary data providers, as well as free test data we collect. There is a collection of data transformation tools. Join our Telegram group to get the latest news and ask questions [https://t.me/brainrex, #brainrex](https://t.me/brainrex). More about Brainrex at [https://brainrex.com](http://brainrex.com). Full Documentation can be found at [https://brainrexapi.github.io/docs](https://brainrexapi.github.io/docs)

OpenAPI spec version: 0.1.1
Contact: support@brainrex.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SentimentAnalysisApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SentimentAnalysisApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SentimentAnalysisApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SentimentAnalysisApi' do
    it 'should create an instance of SentimentAnalysisApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SentimentAnalysisApi)
    end
  end

  # unit tests for sentiment_get_price_sentiment
  # Sentiment analysis score using a model trained for buy signals.
  # Gives a 0 to 1 score, depending on buy/sell sentiment
  # @param text String of text to be analyzed. I can be in any language.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'sentiment_get_price_sentiment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sentiment_get_sentiment
  # Sentiment analysis for any given blob of text
  # Gives a -1 to 1 score, depending on bearish/bullish sentiment
  # @param text String of text to be analyzed. I can be in any language.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'sentiment_get_sentiment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
